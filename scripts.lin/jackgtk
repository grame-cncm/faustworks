#!/bin/bash

#####################################################################
#                                                                   #
#               Compiles Faust programs to jack-gtk                 #
#               (c) Grame, 2009                                     #
#                                                                   #
#####################################################################


#-------------------------------------------------------------------
# Analyze command arguments :
# faust options                 -> OPTIONS
# if -omp : -openmp or -fopenmp -> OPENMP
# existing *.dsp files          -> FILES
#

# PHASE 1 : Look for -icc option to force use of intel icc (actually icpc)
# without having to configure CXX and CXXFLAGS
for p in $@; do
	if [ "$p" = -icc ]; then
		. /opt/intel/Compiler/11.1/059/bin/iccvars.sh intel64
		CXX=icpc
		CXXFLAGS='-O3 -xT -ftz -fno-alias -fp-model fast=2'
    fi
done

#PHASE 2 : dispatch command arguments
for p in $@; do
    if [ "$p" = -omp ]; then
        if [[ $CXX == "icpc" ]]; then
            OMP="-openmp"
        else
            OMP="-fopenmp"
        fi
    fi
  
    if [ "$p" = -icc ]; then
    	ignore=" "
    elif [ ${p:0:1} = "-" ]; then
	    OPTIONS="$OPTIONS $p"
	elif [[ -e "$p" ]]; then
	    FILES="$FILES $p"
	else
	    OPTIONS="$OPTIONS $p"        
	fi
done




#-------------------------------------------------------------------
# Check darwin specifics
#
if [[ $(uname) == Darwin ]]; then
    SPEC="-spec macx-g++"
    EXT=".app"

	#-------------------------------------------------------------------
	# compile the *.dsp files on darwin using QT instead of GTK
	#
	for f in $FILES; do
		faust -a jack-gtk.cpp "$f" -o "$f.cpp"
		${CXX=g++} ${CXXFLAGS=-O3} `pkg-config --cflags --libs jack gtk+-2.0` "$f.cpp" -o "${f%.dsp}"
	
		CUR=$(pwd)
		f=$(basename "$p")
		SRCDIR=$(dirname "$p")
	
		# creates a temporary dir 
		TDR=$(mktemp -d)
		TMP=$TDR/${f%.dsp}
		mkdir "$TMP"
	
		# compile faust to c++
		faust -a jack-qt.cpp $OPTIONS "$SRCDIR/$f" -o "$TMP/${f%.dsp}.cpp"
	
		# compile c++ to binary
		(
			cd "$TMP"
			qmake -project "INCLUDEPATH+=/usr/local/lib/faust/" "LIBS+=-ljack" "HEADERS+=/usr/local/lib/faust/faustqt.h"
			qmake $SPEC
			make
		) > /dev/null
	
		rm -rf "$SRCDIR/${f%.dsp}$EXT"
		cp "$TMP/${f%.dsp}$EXT" "$SRCDIR/${f%.dsp}$EXT"
		rm -rf "$TDR"
	
		# collect binary file name for FaustGIDE
		BINARIES="$BINARIES$SRCDIR/${f%.dsp}$EXT;"
	done

else
	
	#-------------------------------------------------------------------
	# compile the *.dsp files using GTK on linux
	#
	for f in $FILES; do
	
		# compile faust to c++
		faust -a jack-gtk.cpp $OPTIONS "$f" -o "$f.cpp"

		# compile c++ to binary
		(
			${CXX=g++} ${CXXFLAGS=-O3} $OMP "$f.cpp" `pkg-config --cflags --libs jack gtk+-2.0` -o "${f%.dsp}"
		) > /dev/null
		rm "$f.cpp"

		# collect binary file name for FaustGIDE
		BINARIES="$BINARIES${f%.dsp};"
	done

fi

echo $BINARIES


