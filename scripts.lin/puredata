#!/bin/bash

#####################################################################
#                                                                   #
#               Compiles Faust programs to puredata                 #
#               (c) Grame, 2009                                     #
#                                                                   #
#####################################################################


#-------------------------------------------------------------------
# Analyze command arguments :
# faust options                 -> OPTIONS
# if -omp : -openmp or -fopenmp -> OPENMP
# existing *.dsp files          -> FILES
#

# PHASE 1 : Look for -icc option to force use of intel icc (actually icpc)
# without having to configure CXX and CXXFLAGS
for p in $@; do
	if [ "$p" = -icc ]; then
		CXX=icpc
		CXXFLAGS='-O3 -xT -ftz -fno-alias -fp-model fast=2'
    fi
done

#PHASE 2 : dispatch command arguments
for p in $@; do
    if [ "$p" = -omp ]; then
        if [[ $CXX == "icpc" ]]; then
            OMP="-openmp"
        else
            OMP="-fopenmp"
        fi
    fi
  
    if [ "$p" = -icc ]; then
    	ignore=" "
    elif [ ${p:0:1} = "-" ]; then
	    OPTIONS="$OPTIONS $p"
	elif [[ -e "$p" ]]; then
	    FILES="$FILES $p"
	else
	    OPTIONS="$OPTIONS $p"        
	fi
done


#-------------------------------------------------------------------
# Check darwin specifics
#
if [[ $(uname) == Darwin ]]; then
    LIB="-I/usr/include/pd -bundle -undefined suppress -flat_namespace"
    EXT="~.pd_darwin"
else
    LIB="-I/usr/include/pd -fPIC -shared"
    EXT="~.pd_linux"
fi

#-------------------------------------------------------------------
# compile the *.dsp files
#
for p in $FILES; do

    CUR=$(pwd)
    f=$(basename "$p")
	SRCDIR=$(dirname "$p")

    # creates a temporary dir 
    TDR=$(mktemp -d)
	TMP=$TDR/${f%.dsp}
    mkdir "$TMP"

    # compile faust to c++ and xml
    faust -xml "$SRCDIR/$f" -o /dev/null;
    mv "$SRCDIR/$f.xml" $TMP/
    faust -a puredata.cpp $OPTIONS "$SRCDIR/$f" -o "$TMP/${f%.dsp}.cpp"

    # compile c++ to binary
    (
        cd "$TMP"
        ${CXX=g++} $CXXFLAGS $OMP $LIB -Dmydsp=${f%.dsp} -o ${f%.dsp}$EXT ${f%.dsp}.cpp
        faust2pd -s $f.xml
    ) > /dev/null

    ##rm -rf "$SRCDIR/${f%.dsp}$EXT"
    cp "$TMP/${f%.dsp}$EXT" "$SRCDIR/${f%.dsp}$EXT"
    cp "$TMP/${f%.dsp}.pd" "$SRCDIR/${f%.dsp}.pd"
	##rm -rf "$TDR"

    # collects all the files produced
     BINARIES="$BINARIES$SRCDIR/${f%.dsp}$EXT;$SRCDIR/${f%.dsp}.pd;"

done

# return the binaries names
echo "$BINARIES"


